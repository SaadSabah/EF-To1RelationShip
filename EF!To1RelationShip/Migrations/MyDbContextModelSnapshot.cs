// <auto-generated />
using EF_To1RelationShip;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_To1RelationShip.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_To1RelationShip.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Toyota",
                            Model = "Auris",
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Volvo",
                            Model = "V40",
                            Year = 2022
                        },
                        new
                        {
                            Id = 3,
                            Brand = "SAAB",
                            Model = "900T",
                            Year = 2001
                        });
                });

            modelBuilder.Entity("EF_To1RelationShip.Engine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPistons")
                        .HasColumnType("int");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("Engines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            NumberOfPistons = 4,
                            Volume = 2
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            NumberOfPistons = 6,
                            Volume = 4
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            NumberOfPistons = 8,
                            Volume = 6
                        });
                });

            modelBuilder.Entity("EF_To1RelationShip.Engine", b =>
                {
                    b.HasOne("EF_To1RelationShip.Car", "Car")
                        .WithOne("Engine")
                        .HasForeignKey("EF_To1RelationShip.Engine", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("EF_To1RelationShip.Car", b =>
                {
                    b.Navigation("Engine")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
